version: "3.7"

services:

  ### Anwendung ###

  HelloJexxa:
    image: ghcr.io/repplix/hellojexxa:latest
    ports:
      - "7501:7501"

    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7501/BoundedContext/isRunning/'"]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure

  TimeService:
    image: ghcr.io/repplix/timeservice:latest
    ports:
      - "7502:7502"

    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7502/BoundedContext/isRunning/'"]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure


  BookStore:
    image: ghcr.io/repplix/bookstore:latest
    ports:
      - "7503:7503"

    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7503/BoundedContext/isRunning/'"]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure


  BookStoreJ:
    image: ghcr.io/repplix/bookstorej:latest
    ports:
      - "7504:7504"

    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7504/BoundedContext/isRunning/'"]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure


  BookStoreJ16:
    image: ghcr.io/repplix/bookstorej16:latest
    ports:
      - "7505:7505"

    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7505/BoundedContext/isRunning/'"]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure

  ContractManagement:
    image: ghcr.io/repplix/contractmanagement:latest
    ports:
      - "7506:7506"

    healthcheck:
      test: [ "CMD-SHELL", "wget -nv -t1 --spider 'http://localhost:7506/BoundedContext/isRunning/'" ]
      interval: 10s
      timeout: 10s
      retries: 3

    deploy:
      replicas: 2
      update_config:
        order: start-first        # Configure rolling updates
        failure_action: rollback

      rollback_config:
        parallelism: 1            # Rollback config
        order: start-first

      restart_policy:
        condition: on-failure

  ### Infrastruktur ###

  ActiveMQ:
    image: rmohr/activemq

  Postgres:
    image: postgres:14.0-alpine

    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: "admin"
      POSTGRES_USER: "admin"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

